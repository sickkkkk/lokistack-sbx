services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
     - "9090:9090"
    restart: unless-stopped
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker:/var/lib/docker:ro
    networks:
      - monitoring

  loki:
    image: grafana/loki:latest
    container_name: loki
    volumes:
      - ./loki/loki-config.yml:/etc/loki/loki-config.yml
    restart: unless-stopped
    command: -config.file=/etc/loki/loki-config.yml
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
      - loki
    volumes:
      - grafana-storage:/var/lib/grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - logs-volume:/logs
      - ./promtail/promtail-config.yml:/etc/promtail/config.yml
    restart: unless-stopped
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring

  rust-app:
    build: ./rust-log-app
    container_name: rust-log-app
    volumes:
      - logs-volume:/logs
    environment:
      - LOG_FILE_PATH=/logs/rust-app.log
    depends_on:
      - loki
    networks:
      - monitoring

  haproxy:
    image: haproxy:latest
    container_name: haproxy
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    ports:
      - "80:80"
    depends_on:
      - grafana
      - loki
    networks:
      - monitoring

volumes:
  grafana-storage:
  logs-volume:

networks:
  monitoring:
    driver: bridge
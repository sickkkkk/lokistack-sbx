services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
     - "9090:9090"
    restart: unless-stopped
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker:/var/lib/docker:ro
    networks:
      - monitoring

  victorialogs:
    image: victoriametrics/victoria-logs:latest-scratch
    container_name: victoria-logs
    ports:
      - "9428:9428"
    command: >
      -retentionPeriod=3d
      -storageDataPath=/vlogs-data
    volumes:
      - victoria-logs-data:/vlogs-data
    restart: unless-stopped
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
      - victorialogs
    volumes:
      - grafana-storage:/var/lib/grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_PLUGINS_PREINSTALL=victoriametrics-logs-datasource
      - GF_LOG_LEVEL=debug
    networks:
      - monitoring

  fluentbit:
    image: fluent/fluent-bit:latest
    container_name: fluentbit
    volumes:
      - logs-volume:/logs
      - ./fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf:ro
      - ./fluent-bit/parsers.conf:/fluent-bit/etc/parsers.conf:ro
    restart: unless-stopped
    networks:
      - monitoring

  rust-app:
    build: ./rust-log-app
    container_name: rust-log-app
    volumes:
      - logs-volume:/logs
    environment:
      - LOG_FILE_PATH=/logs/rust-app.log
      - LOG_INTERVAL=0.1
    depends_on:
      - victorialogs
    networks:
      - monitoring

  haproxy:
    image: haproxy:latest
    container_name: haproxy
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    ports:
      - "80:80"
    depends_on:
      - grafana
      - victorialogs
    networks:
      - monitoring

volumes:
  grafana-storage:
  logs-volume:
  victoria-logs-data:

networks:
  monitoring:
    driver: bridge
